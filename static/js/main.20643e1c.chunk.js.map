{"version":3,"sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.styled.js","components/ImageGallery/ImageGallery.js","components/LoadMoreBtn/LoadMoreBtn.styled.js","components/LoadMoreBtn/LoadMoreBtn.js","App.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","apiRequests/apiRequests.js","App.js","reportWebVitals.js","index.js"],"names":["Form","styled","header","Bar","form","SearchBtn","button","SerchBtnLabel","span","SearchInput","input","Searchbar","state","inputValue","handleSearchInput","e","setState","currentTarget","value","handleSubmit","preventDefault","props","sendInputValue","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component","GalleryItemStyles","li","GalleryItemImg","img","ImageGalleryItem","queryResult","map","image","src","webformatURL","alt","tags","id","GalleryStyles","ul","ImageGallery","getImage","onClick","LoadBtnStyles","LoadMoreBtn","handleClick","AppWrapper","div","ModalBtn","ModalContent","Overlay","Modal","componentDidMount","window","addEventListener","handleKeydown","code","handleKeycode","removeEventListener","handleOverlayClick","children","fetchImages","query","page","fetch","then","res","ok","json","Promise","reject","Error","App","searchInput","currentPage","apiResult","error","openModal","loader","currentImageId","currentImageURL","showModal","target","nodeName","imageId","Number","dataset","getImageUrl","targetImage","find","largeImageURL","handleSearchinput","fetchRequest","handleLoadMore","toggleModal","closeModal","prevState","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","data","hits","catch","finally","isApiResult","length","className","color","height","width","timeout","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.20643e1c.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Form = styled.header(`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n\r\n`);\r\n\r\nconst Bar = styled.form(`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`);\r\n\r\nconst SearchBtn = styled.button(`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover, &:focus{\r\n    opacity: 1;\r\n  }\r\n  `);\r\n\r\nconst SerchBtnLabel = styled.span(`\r\n  position: absolute;\r\n//   width: 1px;\r\n//   height: 1px;\r\n//   padding: 0;\r\n//   overflow: hidden;\r\n//   clip: rect(0, 0, 0, 0);\r\n//   white-space: nowrap;\r\n//   clip-path: inset(50%);\r\n//   border: 0;\r\n`);\r\n\r\nconst SearchInput = styled.input(`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  ::plactholder{\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`);\r\n\r\nexport { Form, Bar, SearchBtn, SerchBtnLabel, SearchInput };\r\n","import { Component } from 'react';\r\nimport { Form, Bar, SearchBtn, SerchBtnLabel, SearchInput } from './Searchbar.styled';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n\r\n  handleSearchInput = e => {\r\n    this.setState({ inputValue: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.sendInputValue(this.state.inputValue);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Bar onSubmit={this.handleSubmit}>\r\n          <SearchBtn type=\"submit\">\r\n            <SerchBtnLabel></SerchBtnLabel>\r\n          </SearchBtn>\r\n\r\n          <SearchInput\r\n            type=\"text\"\r\n            value={this.state.inputValue}\r\n            onChange={this.handleSearchInput}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </Bar>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import styled from '@emotion/styled';\r\n\r\nconst GalleryItemStyles = styled.li(`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`);\r\n\r\nconst GalleryItemImg = styled.img(`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover, &:focus{\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`);\r\n\r\nexport { GalleryItemStyles, GalleryItemImg };\r\n","import { GalleryItemStyles, GalleryItemImg } from './ImageGalleryItem.styled';\r\n\r\nconst ImageGalleryItem = ({ queryResult }) => {\r\n  return (\r\n    <>\r\n      {queryResult.map(image => {\r\n        return (\r\n          <GalleryItemStyles key={image.id}>\r\n            <GalleryItemImg src={image.webformatURL} alt={image.tags} data-id={image.id} />\r\n          </GalleryItemStyles>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import styled from '@emotion/styled';\r\n\r\nconst GalleryStyles = styled.ul(`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`);\r\n\r\nexport default GalleryStyles;\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\nimport GalleryStyles from './ImageGallery.styled';\r\n\r\nconst ImageGallery = ({ queryResult, getImage }) => {\r\n  return (\r\n    <GalleryStyles onClick={getImage}>\r\n      <ImageGalleryItem queryResult={queryResult} />\r\n    </GalleryStyles>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import styled from '@emotion/styled';\r\n\r\nconst LoadBtnStyles = styled.button(`\r\n  width: 100px;\r\n    margin: 0 auto;\r\n`);\r\n\r\nexport default LoadBtnStyles;\r\n","import LoadBtnStyles from './LoadMoreBtn.styled';\r\n\r\nconst LoadMoreBtn = ({ handleClick }) => {\r\n  return (\r\n    <LoadBtnStyles type=\"button\" onClick={handleClick}>\r\n      Load more\r\n    </LoadBtnStyles>\r\n  );\r\n};\r\nexport default LoadMoreBtn;\r\n","import styled from '@emotion/styled';\r\n\r\nconst AppWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;\r\n\r\nconst ModalBtn = styled.button(`\r\ndisplay: block;\r\n  margin-left: auto;\r\n  margin-right: 0;\r\n  margin-bottom: 5px;\r\n\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: auto;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n}\r\n\r\n`);\r\n\r\nexport { AppWrapper, ModalBtn };\r\n","import styled from '@emotion/styled';\r\n\r\nconst ModalContent = styled.div(`\r\n  \r\n\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`);\r\n\r\nconst Overlay = styled.div(`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`);\r\n\r\nexport { ModalContent, Overlay };\r\n","import { ModalContent, Overlay } from './Modal.styled';\r\nimport React, { Component } from 'react';\r\n\r\nclass Modal extends Component {\r\n  componentDidMount = () => {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = e => {\r\n    if (e.code !== 'Escape') return;\r\n    this.props.handleKeycode();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Overlay onClick={this.props.handleOverlayClick}>\r\n        <ModalContent>{this.props.children}</ModalContent>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","const fetchImages = (query, page) => {\r\n  return fetch(`https://pixabay.com/api/?q=${query}&page=${page}&key=22046149-41a2515b5a783e6a5f4bfbfcc&image_type=photo&orientation=horizontal&per_page=12\r\n`).then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error('Something went wrong'));\r\n  });\r\n};\r\n\r\nexport default fetchImages;\r\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n// import { GrFormClose } from 'react-icons/gr';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport LoadMoreBtn from './components/LoadMoreBtn';\nimport { AppWrapper, ModalBtn } from './App.styled';\nimport Modal from './components/Modal';\nimport fetchImages from './apiRequests/apiRequests';\n\nclass App extends Component {\n  state = {\n    searchInput: '',\n    currentPage: 1,\n    apiResult: [],\n    error: '',\n    openModal: false,\n    loader: false,\n    currentImageId: '',\n    currentImageURL: '',\n  };\n\n  componentDidUpdate(prevState, prevProps) {\n    if (this.state !== prevProps) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  showModal = e => {\n    if (e.target.nodeName !== 'IMG') return;\n    const imageId = Number(e.target.dataset.id);\n\n    this.getImageUrl(imageId);\n    this.setState({ openModal: true });\n  };\n\n  getImageUrl = imageId => {\n    const targetImage = this.state.apiResult.find(image => {\n      return image.id === imageId;\n    });\n\n    this.setState({ currentImageURL: targetImage.largeImageURL });\n    return targetImage.largeImageURL;\n  };\n\n  handleSearchinput = searchInput => {\n    this.setState({ searchInput });\n\n    const { currentPage } = this.state.currentPage;\n\n    this.setState({ currentPage: 1, apiResult: [] });\n    this.fetchRequest(searchInput, currentPage);\n  };\n\n  fetchRequest(query, page) {\n    this.setState({ loader: true });\n\n    fetchImages(query, page)\n      .then(data =>\n        this.setState(prevState => {\n          const newValue = [...prevState.apiResult, ...data.hits];\n          return { apiResult: newValue };\n        }),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ loader: false }));\n  }\n\n  handleLoadMore = e => {\n    const { searchInput, currentPage } = this.state;\n    this.setState({ currentPage: currentPage + 1 });\n\n    this.fetchRequest(searchInput, currentPage + 1);\n  };\n\n  toggleModal = () => {\n    this.setState(({ openModal }) => ({ openModal: !openModal }));\n  };\n\n  closeModal = e => {\n    if (e.target.nodeName === 'IMG') return;\n    this.toggleModal();\n  };\n\n  render() {\n    const { openModal, apiResult, loader, currentImageURL, error } = this.state;\n    const isApiResult = this.state.apiResult.length > 0;\n\n    return (\n      <AppWrapper className=\"App\">\n        <Searchbar sendInputValue={this.handleSearchinput} />\n        <ImageGallery queryResult={apiResult} getImage={this.showModal} />\n        {loader && (\n          <Loader\n            className=\"loaderIcon\"\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={300000}\n          />\n        )}\n        {openModal && (\n          <Modal handleOverlayClick={this.closeModal} handleKeycode={this.toggleModal}>\n            <ModalBtn type=\"button\">Close</ModalBtn>\n            <img src={currentImageURL} alt=\"\" key=\"null\" />\n          </Modal>\n        )}\n        {error && <p>Woops... {error.message}</p>}\n        {isApiResult && <LoadMoreBtn handleClick={this.handleLoadMore} />}\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}